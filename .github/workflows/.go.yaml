name: build

on:
  push:
    branches: [ main ]
    tags:     [ v* ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: set up go 1.22.3
        uses: actions/setup-go@v4
        id: go
        with:
          go-version: 1.22.3
          token: ${{ secrets.GH_DOTCOM_TOKEN }}

      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: build and test
        run: |
          go test -v -timeout=100s -covermode=count -coverprofile=$GITHUB_WORKSPACE/profile.cov_tmp ./...
          cat $GITHUB_WORKSPACE/profile.cov_tmp | grep -v "mock_" > $GITHUB_WORKSPACE/profile.cov
        working-directory: app
        env:
          TZ: "Asia/Almaty"
          CGO_ENABLED: 0

      - name: run golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: v1.56.2
          working-directory: app
          args: --timeout 5m
          skip-cache: true
          skip-pkg-cache: true
          skip-build-cache: true

      - name: login to ghcr
        id: docker_login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.0
        with:
          images: ghcr.io/semior001/dnsit
          tags: |
            type=raw,value=latest
            type=semver,pattern=raw

      - name: build and push tagged docker image
        if: ${{ startsWith(github.ref, 'refs/tags/') }}
        id: docker_build
        uses: docker/build-push-action@v2
        env:
          GITHUB_TAG: ${{ github.ref }}
        with:
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}

      - name: curl updater
        run:
          curl --max-time 300 https://upd.semior.dev/update/migbt/${{secrets.UPDATER_TOKEN}}

      - name: cleanup old images
        if: ${{ github.ref == 'refs/heads/main' }}
        uses: actions/delete-package-versions@v4
        with:
          package-name: dnsit
          package-type: container
          min-versions-to-keep: 3
          ignore-versions: "^(latest|v[0-9]\\.[0-9]\\.[0-9])$"
